extends bootstrap

block header
  ul.nav.navbar-nav.navbar-right
    li
      a(href="/stats?address=" + address)
        i.fa.fa-arrow-left.fa-lg
        | &nbsp; Back to Stats

block content
  .container-fluid
    .container
      if (error && error.length > 0)
        .alert.alert-danger.alert-dismissable
          button.close(type="button", data-dismiss="alert", aria-hidden="true") &times;
          i.fa.fa-frown-o.fa-lg &nbsp;
          strong= error
      if (success && success.length > 0)
        .alert.alert-success.alert-dismissable
          button.close(type="button", data-dismiss="alert", aria-hidden="true") &times;
          i.fa.fa-smile-o.fa-lg &nbsp;
          strong= success
      h1 Notification Config
      br
      .container
        form(role="config", name="config", action="/notifications/config/" + notification.getHashId(), method="post")
          ul.nav.nav-tabs
            li.active
              a(href="#general", data-toggle="tab") General
            li
              a(href="#hashrate", data-toggle="tab") Hashrate
            li
              a(href="#payments", data-toggle="tab") Payment
            button.btn.btn-success(type="submit", value="Save", style="margin-left: 10px;") Save Settings
              
          .tab-content
            #general.tab-pane.active
              .container
                br
                table.table
                  tr
                    th Bitcoin Address
                  tr
                    td= notification.address
                  tr
                    th Email Address
                  tr
                    td= notification.email
                a.btn.btn-danger(href="/notifications/remove/" + notification.getHashId(), style="margin-left: 10px;") Stop All Notifications
     
            #hashrate.tab-pane
              .container
                br
                .form
                   p.container
                     | Hashrate notifications occur when your hashrate over the given period of time falls below a threshold.
                     | These notifications will only occur once an hour, and only as long as your current data is being polled.
                  .form-group
                    label(for="hashrateEnabled") Hashrate Notifications
                    p.container
                      input#hashrateEnabled.form-control(type="checkbox", name="hashrateEnabled", checked= notification.hashrateEnabled)
                  #hashrateSettings(style="display: none;")
                    .form-group
                      label(for="averageMinutes") Minutes for Calculated Average
                      p.container The number of minutes used to find your average hashrate.
                      p.container
                        input#averageMinutes(type="text",name="averageMinutes",value=notification.averageMinutes,data-slider-min="5",data-slider-max="60",data-slider-step="1",data-slider-value=notification.averageMinutes,data-slider-orientation="horizontal",data-slider-selection="after",data-slider-tooltip="hide")
                        span(style="margin-left: 20px")
                          span#hashrateMinutesValue= notification.averageMinutes
                          | &nbsp;minutes
                    .form-group
                      label(for="threshold") Threshold
                      p.container Send a notification when your above calculated average drops below this number.
                      p.container
                        input#threshold(type="number", name="threshold", value=notification.threshold, placeholder="kH/s")
                        span(style="margin-left: 20px") kH/s

            #payments.tab-pane
              .container
                br
                .form
                  p.container
                     | Payment notifications occur whenever WAFFLEStats detects that a new payment has been sent out to your bitcoin address.
                     | These notifications will only be sent out as payments occur, and only as long as your current data is being polled.
                  .form-group
                    label(for="paymentEnabled") Payment Notifications
                    p.container
                      input#paymentEnabled.form-control(type="checkbox", name="paymentEnabled" checked= notification.paymentEnabled)
      
block scripts
  script(src='/javascripts/notificationConfig.js')